#topHand {
	position: absolute;
	top: 0;
	left: 10.52vh;
	max-height: 12vh;
	width: calc(100vw - 21.04vh);
	text-align: center; /*Center tiles horizontally. */
	background-color: #5a3e32;
}

#leftHand {
	position: absolute;
	left: 0;
	top: 0;
	max-width: 10.52vh;
	width: 10.52vh;
	height: 100vh;
	background-color: #4c3329;
}

#rightHand {
	position: absolute;
	right: 0;
	top: 0;
	max-width:10.52vh;
	width: 10.52vh;
	height: 100vh;
	background-color: #4c3329;
}

@keyframes goToCorrectLocation {
  0% {
	  transform: translateY(-55vh);
	}
  100% {
	  transform: none;
  }
}

.animateTile {
	animation: goToCorrectLocation 6s cubic-bezier(0.05, 1.14, 0, 0.95) forwards;
}

/*We would use bottom, however Safari treats bottom as the bottom of the viewport, and Safari has the viewport != visible area bug.
This means that something using bottom is off the page - hence we must use top. */
#gameBoard #userHand, #gameBoard #userHandExposed, #gameBoard #tilePlacemat {
	position: absolute;
	/*bottom: 0;*/
	top: 88vh;
	left: 10.52vh;
	height:12vh;
	max-height: 12vh;
	width: calc(100vw - 21.04vh);
	text-align: center; /*Center tiles horizontally. */
	background-color: #7d4b37;
}

#gameBoard #userHand {
	z-index: 1; /*Allows tiles in userHand to show up above tiles in handForExposed - needed for indicating last tile drawn. */
}

#gameBoard #userHandExposed {
	/*bottom: 12vh;*/
	top: 76vh;
	background-color: #a04622;
	text-align: left;
}

#gameBoard #tilePlacemat {
	/*bottom: 24vh;*/
	top: 64vh;
	background-color: #FFFFFF00;
}


/*Containers used on left and right hands for vertical alignment. */
#gameBoard #rightHandContainer {
	position: relative;
	top: 50%;
	transform: translateY(-50%);
}

#gameBoard #leftHandContainer {
	position: relative;
	top: 50%;
	transform: translateY(-50%);
}

/*TODO: If tiles aren't at max size and height is much greater than width, the tiles run into each other, as the negative bottoms are height based, but tiles are width bound. */
#gameBoard #topHand img {
	max-width: calc(calc(100vw - 19.04vh) / 14); /*Raised from 14 in order to allow for more tiles to fit. */
	margin-left: calc(calc(100vw - 19.04vh) / 17 / -10); /*Negative margin of 10%. Allows even more tiles to fit. */
	max-height: 12vh;
	/*transform: rotate(180deg);*/ /*Rotate tiles 180 degrees away from the viewer (they would be across from this person)*/
}

/*Note: Currently leftHand and rightHand tiles are facing 180 degrees away from where they would in a real game, however this probably makes it easier to read the tiles. */
#gameBoard #leftHand img {
	transform: rotate(270deg) translate(-3vh, 0px);
	max-width: 9.52vh;
	max-height: 10.5vh;
	padding-left: 2.38vh; /*Otherwise it is transformed partially off the screen. */
	margin-bottom: 0vh; /*It seems like the elements height does not reflect the fact that it has been transformed. Negative margin to remove some of this. */
	margin-top: -4vh; /*Split margin between top and bottom, as to prevent margin causing page to scroll downwards. */
}

#gameBoard #rightHand img {
	transform: rotate(90deg) translate(.75vh, 0px);
	max-width: 9.52vh;
	max-height: 10.5vh;
	margin-top: -4vh; /*It seems like the elements height does not reflect the fact that it has been transformed. Negative margin to remove some of this. */
	margin-bottom: 0vh;
	padding-left: 2.77vh; /*Stop from travling off hand to left. */
}

#gameBoard #userHand img, #gameBoard #userHandExposed img, #gameBoard #tilePlacemat img {
	max-width: calc(calc(100vw - 19.04vh) / 14);
	max-height: 12vh;
}

#gameBoard #userHand img {
	margin-left: calc(calc(100vw - 19.04vh) / 17 / -10); /*Negative margin of 10%. Allows even more tiles to fit. */
}

/*Note: These animations are eating up a very significant amount of CPU/GPU power. We may want to stop using them. */
@keyframes handTurnPulse {
  0% {
    filter: brightness(1);
  }
  25% {
    filter: brightness(0.7);
  }
  50% {
	  filter: brightness(1);
  }
  75% {
	  filter: brightness(1.3);
  }
  100% {
	filter: brightness(1);
  }
}

.brightnessPulse {
	animation: handTurnPulse 3s linear infinite;
}

#gameBoard #tilePlacemat img {
	margin-right: 20px;
	border-radius: calc((100vw - 19.04vh) / 14 / 12); /*border radius 1/12th the width of a tile. TODO: This should be analyzed later to make sure it works right*/
}

@keyframes discardSlotPulse {
  0% {
    background-color: #3D003F99;
  }
  50% {
    background-color: #FF4136B0;
  }
  100% {
	background-color: #3D003F99;
  }
}

#gameBoard #tilePlacemat img.pending {
	animation: discardSlotPulse 3s infinite;
}

#gameBoard #compass {
	position: absolute;
	right: calc(9.52vh + 4vmin);
	top: calc(12vh + 3vmin);
	width: 12vw;
	height: 12vw;
	max-width: 12vh;
	max-height: 12vh;
}

#bottomNametag, #leftNametag, #rightNametag, #topNametag {
	position: absolute;
	margin: 0;
	text-align: center;
	font-size: 2.2vmin;
	min-width: 12vmin;
}

#bottomNametag {
	right: calc(9.52vh + 4vmin);
	top: calc(12vh + 12vmin + 3vmin);
}

#leftNametag {
	transform: rotate(270deg);
	right: calc(9.52vh + 12vmin);
	top: calc(12vh + 7vmin);
}

#topNametag {
	right: calc(9.52vh + 4vmin);
	top: 12vh;
}

#rightNametag {
	transform: rotate(90deg);
	right: calc(9.52vh - 3.5vmin);
	top: calc(12vh + 7vmin);
}

/*The max number of tiles should be 91. Therefore, we will prepare for tiles 31 by 3. The last two spots will be filled by a count of the tiles in the wall.  */
#gameBoard #wall {
	position: absolute;
	left: 9.52vh;
	top: 12vh;
	margin-left: 1vw;
	margin-top: 1vh;
	max-width: 50vw;
	max-height: 10vh;
}

#gameBoard #wall * {
	max-width: calc(50vw / 31);
	max-height: 3.33vh;
}

#gameBoard #wall p {
	display: inline-block;
	margin: 0;
	font-size: 2.5vh;
	vertical-align: top;
	width: calc(50vw / 31);
	text-align: center;
}

#gameBoard #discardPile {
	position: absolute;
	left: 9.52vh;
	top: 22vh;
	margin-left: 3vw;
	margin-top: 8vh;
	max-width: 50vw;
	max-height: 30vh;
}

#gameBoard #discardPile * {
	max-width: calc(60vw / 23);
	max-height: 7.5vh;
}

/*Since we have to use top instead of bottom due to viewport bugs, this can be floating above where it should be. */
#gameBoard #fullscreenControls {
	position: absolute;
	right: 10.52vh;
	top: 71vh;
	max-height: 5vh;
	max-width: 5vw;
	z-index: 1;
}

#gameBoard #revertStateButton {
	position: absolute;
	left: calc(9.52vh + 2vw);
	top: 64vh;
	width: 10vw;
	height: 5vh;
	border-radius: 50vh;
	font-size: 1.6vh;
}

#gameBoard #proceedButton {
	position: absolute;
	right: calc(9.52vh + 8vw);
	top: 64vh;
	width: 10vw;
	height: 5vh;
	border-radius: 50vh;
	font-size: 1.6vh;
}

@keyframes animateScale {
  0% {
    transform: scale(1);
  }
  33% {
	transform: scale(1.4);
  }
  83% {
	transform: scale(0.8);
  }
  100% {
	transform: scale(1);
  }
}

.scaleAnimation {
	animation: animateScale 3s linear 6s infinite;
}




#gameBoard #endGameButton {
	position: absolute;
	left: calc(9.52vh + 2vw);
	top: 70vh;
	width: 10vw;
	height: 5vh;
	border-radius: 50vh;
	font-size: 1.6vh;
}

#gameBoard #goMahjongButton {
	position: absolute;
	right: calc(9.52vh + 8vw);
	top: 70vh;
	width: 10vw;
	height: 5vh;
	border-radius: 50vh;
	font-size: 1.6vh;
}

#gameBoard #proceedButton:disabled {
	opacity: 0.5;
	cursor: not-allowed;
}

#instructionBubble {
	position: absolute;
	right: calc(9.52vh + 10px + 1vw);
	top: 35vh;
	background-color: #fdffcb;
	font-size: calc(1.1vmin + 0.75vmax); /*Seems to work decently, though not perfect. TODO: Might need to transpile this too. */
	padding: 10px;
	border-radius: 10px;
	width: 20vw;
	height: 21vh;
	display: flex;
	align-items: center;
	text-align: center;
	justify-content: center;
}

#gameBoard #newGameNoLobbyButton {
	position: absolute;
	left: calc(9.52vh + 2vw);
	top: 58vh;
	width: 10vw;
	height: 5vh;
	border-radius: 50vh;
	font-size: 1.6vh;
}

#gameBoard {
	position: absolute;
	width: 100vw;
	height: 100vh;
	background-color: #c3f6c3;
}
