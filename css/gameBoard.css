#topHand {
	position: absolute;
	top: 0;
	left: 10.52vh;
	max-height: 12vh;
	width: calc(100vw - 21.04vh);
	background-color: #5a3e32;
	display: flex;
	align-items: flex-start;
	justify-content: center;
}

#leftHand {
	position: absolute;
	left: 0;
	top: 0;
	max-width: 10.52vh;
	width: 10.52vh;
	height: 100vh;
	background-color: #4c3329;
	padding-left: calc(1px + 100vw * var(--shiftPercentageLeft) * var(--counterTranslationScaling));
	transform: translateX(calc(-100vw * var(--shiftPercentageLeft) * var(--counterTranslationScaling)));
}

#rightHand {
	position: absolute;
	right: 0;
	top: 0;
	max-width:10.52vh;
	width: 10.52vh;
	height: 100vh;
	background-color: #4c3329;
	transform: translateX(calc(100vw * var(--shiftPercentageRight) * var(--counterTranslationScaling)));
	padding-right: calc(1px + 100vw * var(--shiftPercentageRight) * var(--counterTranslationScaling));
}

@keyframes goToCorrectLocation {
  0% {
	  transform: translateY(-55vh);
	}
  100% {
	  transform: none;
  }
}

.animateTile {
	animation: goToCorrectLocation 6s cubic-bezier(0.05, 1.14, 0, 0.95) forwards;
}

/*We would use bottom, however Safari treats bottom as the bottom of the viewport, and Safari has the viewport != visible area bug.
This means that something using bottom is off the page - hence we must use top. */
#userHand, #userHandExposed, #tilePlacemat {
	position: absolute;
	left: 10.52vh;
	height: 12vh;
	max-height: 12vh;
	width: calc(100vw - 21.04vh);
	background-color: #7d4b37;
}

#gameBoard #userHand {
	z-index: 1; /*Allows tiles in userHand to show up above tiles in handForExposed - needed for indicating last tile drawn. */
	top: 85vh;
	height: 15vh;
	max-height: 15vh;
	display: flex;
	align-items: flex-start;
	justify-content: center;
}

#gameBoard #userHandExposed {
	top: 73vh;
	background-color: #a04622;
	display: flex;
	align-items: flex-start;
	justify-content: left;
}

#gameBoard #tilePlacemat {
	top: 61vh;
	background-color: #FFFFFF00;
	text-align: center;
}


/*Containers used on left and right hands for vertical alignment. */
#gameBoard #rightHandContainer {
	position: relative;
	top: 50%;
	transform: translateY(-50%);
}

#gameBoard #leftHandContainer {
	position: relative;
	top: 50%;
	transform: translateY(-50%);
}

#topHand img, #userHandExposed img {
	min-height: 0;
	min-width: 0;
	max-height: 12vh;
}

#leftHand img {
	transform: rotate(270deg) translate(-1vh, 0px);
	padding-left: 2.38vh; /*Otherwise it is transformed partially off the screen. */
}

#rightHand img {
	transform: rotate(90deg) translate(-1.25vh, 0px);
	padding-left: 2.77vh; /*Stop from travling off hand to left. */
}

#leftHand img, #rightHand img {
	max-width: 9.52vh;
	max-height: 10.5vh;
}

#leftHand img:not(:first-child), #rightHand img:not(:first-child) {
	margin-top: calc(-3.4vh - 0.6vh * var(--negativeMarginMultiplier)); /*It seems like the elements height does not reflect the fact that it has been transformed. Negative margin to remove some of this. */
}

#tilePlacemat img {
	max-width: calc(calc(50vw - 9.52vh - 18vw - 4vw) / 3); /*Placemat centered, so smallest half. Find space between game buttons, minus margin between placemat slots*/
	max-height: 11vh;
}

#userHand img {
	min-height: 0;
	min-width: 0;
	max-height: 15vh;
}

#userHand img:not(:first-child), #userHandExposed img:not(:first-child), #topHand img:not(:first-child) {
	margin-left: calc(calc(100vw - 19.04vh) / 17 / -10 * var(--negativeMarginMultiplier)); /*Negative margin of 10%. Allows even more tiles to fit. */
}

#tilePlacemat img {
	margin-right: 2vw;
	border-radius: 10%;
}

@keyframes discardSlotPulse {
  0% {
    background-color: #3D003F99;
  }
  50% {
    background-color: #FF4136B0;
  }
  100% {
	background-color: #3D003F99;
  }
}

#tilePlacemat img.pending {
	animation: discardSlotPulse 4s infinite;
}

#compass {
	position: absolute;
	right: calc(9.52vh + 4vmin);
	top: calc(12vh + 3vmin);
	width: 12vw;
	height: 12vw;
	max-width: 12vh;
	max-height: 12vh;
}

#bottomNametag, #leftNametag, #rightNametag, #topNametag {
	position: absolute;
	margin: 0;
	text-align: center;
	font-size: 2.2vmin;
	min-width: 12vmin;
}

#bottomNametag {
	right: calc(9.52vh + 4vmin);
	top: calc(12vh + 12vmin + 3vmin);
}

#leftNametag {
	transform: rotate(270deg);
	right: calc(9.52vh + 12vmin);
	top: calc(12vh + 7vmin);
}

#topNametag {
	right: calc(9.52vh + 4vmin);
	top: 12vh;
}

#rightNametag {
	transform: rotate(90deg);
	right: calc(9.52vh - 3.5vmin);
	top: calc(12vh + 7vmin);
}

#wallAndDiscardContainer {
	position: absolute;
	max-width: calc(75vw - 21.04vh);
}

#wallAndDiscardContainer, .wall {
	/*Wall is not absolute position, so ignored until the wall is transitioned. */
	left: calc(9.52vh + 2vw);
	top: calc(12vh + 1vh);
}

.wall {
	display: flex;
	align-items: center;
	justify-content: left;
	flex-wrap: wrap;
}

.wall, .wall img {
	transition: all 1.6s linear;
	margin-left: 0;
}

.wall img {
	width: calc(1.6vw + 1.6vmin - 1.3vmax);
	aspect-ratio: 0.75;
}

.wall p {
	display: inline-block;
	margin: 0;
	width: calc(2 * calc(1.6vw + 1.6vmin - 1.3vmax));
	text-align: center;
	font-size: calc(1.1 * calc(1.6vw + 1.6vmin - 1.3vmax));
}

.wall.wallPopupView img {
	width: 3.5vw;
}

.wall.wallPopupView p {
	width: 7vw;
	font-size: 4vw;
}

.wall.smallView {
	position: fixed;
	height: 5vh;
	left: calc(9.52vh + 75.5vw - 19.04vh);
	top: 55vh;
}

.wall.smallView img:nth-child(1n+7) {
	margin-left: calc(1px + -1 * calc(1.6vw + 1.6vmin - 1.3vmax)); /*1px so you can see the edge of other tiles and know they are stacked*/
}


#discardPile {
	margin-top: 1vh;
}

#discardPile * {
	max-width: calc(60vw / 23);
	max-height: 7.5vh;
}

/*Since we have to use top instead of bottom due to viewport bugs, this can be floating above where it should be. */
#fullscreenControls {
	position: absolute;
	right: calc(10.52vh + 1vw);
	top: calc(68vh - 1vh);
	max-height: 5vh;
	max-width: 5vw;
	z-index: 1;
}

#syncButton {
	position: absolute;
	right: calc(10.52vh + 1vw);
	top: 61vh;
	max-height: 5vh;
	max-width: 5vw;
	z-index: 1;
}

#revertStateButton {
	position: absolute;
	left: calc(9.52vh + 2vw);
	top: 61vh;
	width: 10vw;
	height: 5vh;
	border-radius: 50vh;
	font-size: 2.1vh;
}

#gameBoard.chinese #revertStateButton {
	left: initial;
	right: calc(9.52vh + 8vw);
	top: 67vh;
}

/*Make these from the left*/
#gameBoard.chinese #proceedButton {
	left: calc(9.52vh + 2vw);
	width: calc(73vw - 19.04vh);
}

#gameBoard.chinese #proceedButton.shrinkForClaimButton {
	left: calc(9.52vh + 13vw);
	top: 54vh;
	width: calc(62vw - 19.04vh);
}


#proceedButton {
	position: absolute;
	left: calc(9.52vh + 13vw);
	top: 54vh;
	width: calc(62vw - 19.04vh);
	height: 5vh;
	border-radius: 50vh;
	font-size: 2.1vh;
}

#gameBoard.american #proceedButton.shrinkForHintButton {
	width: calc(45vw - 19.04vh);
}

#gameBoard.chinese #hintButton {
	display: none;
}

.suggestedHandsTable {
	background: #fdfdfd;
	color: black;
	display: inline-block;
	width: 100%;
	max-height: 40vh;
	overflow: scroll;
}

.suggestedHandsTable img {
	width: calc(100% / 14);
	max-width: 64px; /*Don't let it get too huge. */
	padding-bottom: 10px;
	border-bottom: 1px solid black;
}

#hintButton {
	position: absolute;
	right: calc(9.52vh + 25.5vw);
	top: 54vh;
	width: 15.5vw;
	height: 5vh;
	border-radius: 50vh;
	font-size: 2.1vh;
}

@keyframes animateScale {
  0% {
    transform: scaleY(1) scaleX(1);
  }
  50% {
	transform: scaleY(1.2) scaleX(0.9);
  }
  100% {
	transform: scaleY(1) scaleX(1);
  }
}

.scaleAnimation {
	animation: animateScale 3s linear 6s infinite;
}

#endGameButton {
	position: absolute;
	left: calc(9.52vh + 2vw);
	top: 67vh;
	width: 10vw;
	height: 5vh;
	border-radius: 50vh;
	font-size: 2.1vh;
}

#goMahjongButton {
	position: absolute;
	right: calc(9.52vh + 8vw);
	top: 67vh;
	width: 10vw;
	height: 5vh;
	border-radius: 50vh;
	font-size: 2.1vh;
}

#gameBoard.chinese #goMahjongButton {
	top: 61vh;
}

#proceedButton:disabled {
	opacity: 0.5;
	cursor: not-allowed;
}

#newGameNoLobbyButton, #claimButton {
	position: absolute;
	left: calc(9.52vh + 2vw);
	top: 55vh;
	width: 10vw;
	height: 5vh;
	border-radius: 50vh;
	font-size: 2.1vh;
}

#gameBoard.chinese #newGameNoLobbyButton {
	top: 61vh;
}

#swapJokerButton {
	position: absolute;
	right: calc(9.52vh + 8vw);
	top: 61vh;
	width: 10vw;
	height: 5vh;
	border-radius: 50vh;
	font-size: 2.1vh;
}

#gameBoard.chinese #swapJokerButton {
	display: none;
}

#instructionBubble {
	position: absolute;
	right: calc(9.52vh + 10px + 1vw);
	top: calc(12vh + 12vmin + 3vmin + 4vmin);
	background-color: #fdffcb;
	font-size: calc(1.1vmin + 0.70vmax); /*Seems to work decently, though not perfect. TODO: Might need to transpile this too. */
	padding: 0 10px;
	border-radius: 10px;
	width: 20vw;
	height: 22vh;
	display: flex;
	align-items: center;
	text-align: center;
	justify-content: center;
}

.swapJokerOptionMenuButton {
	font-size: inherit;
	width: 60%;
	margin-left: 20%;
	display: block;
}

.historyMenuButtonContainer {
	max-height: 35vh;
	overflow: scroll;
}

.historyMenuButtonContainer button {
	font-size: inherit;
	width: 100%;
}

#gameBoard {
	position: absolute;
	width: 100vw;
	height: 100vh;
	background-color: #c3f6c3;
}
